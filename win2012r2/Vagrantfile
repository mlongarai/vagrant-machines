# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "opentable/win-2012r2-standard-amd64-nocm"
    config.vm.guest = :windows
  # config.vm.communicator = ENV['communicator'] || "winrm" 
	#   config.winrm.username = "ansible"
  # config.winrm.password = "Passw0rd!"
  config.vm.box_version = "1.0.0"
  username = ENV["ansible"]
  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600
  # Configuring
	#   config.ssh.username = "ansible"
	#   config.ssh.password = "Passw0rd!"
	#   config.ssh.insert_key = false
  # config.ssh.sudo_command = ''
	# config.ssh.shell = 'sh -l'

  config.vm.network :forwarded_port, guest: 3389, host: 3388
  config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
  (1..1).each do |i|
    config.vm.define "local_win2012r2-0#{i}" do |node|
      node.vm.network "private_network", ip: "33.33.33.5#{i}"
      node.vm.hostname = "local-win2012r2-#{username}-0#{i}"
    end
  end
  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
    vb.cpus = "2"
    vb.memory = "2048"
    # vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    # vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell",
    binary: true,
    privileged: false,
    inline: <<-SHELL
    # Enable RDP for ansible
		reg add "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
    netsh advfirewall firewall set rule group="remote desktop" new enable=yes
    # net localgroup "remote desktop users" ansible /add
    # # winrm - Switch to private network
    # /cygdrive/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command '$networkListManager = [Activator]::CreateInstance([Type]::GetTypeFromCLSID([Guid]"{DCB00C01-570F-4A9B-8D69-199FDBA5723B}")) ; $connections = $networkListManager.GetNetworkConnections() ; $connections | % {$_.GetNetwork().SetCategory(1)}'
		# sc config winrm start= auto
		# cmd /C "winrm quickconfig -q"
		exit
  SHELL
end
