Vagrant.configure("2") do |config|
  
  config.vm.box = "generic/ubuntu2204"

  config.vm.provider "qemu" do |qe|
    # Specify the architecture, machine type, and CPU settings
    qe.arch = "x86_64"
    qe.machine = "q35"
    qe.cpu = "max"
    qe.net_device = "virtio-net-pci"
    
    # Set up SSH and networking configuration
    qe.ssh_port = 2222
    qe.extra_netdev_args = "net=33.33.33.0/24,dhcpstart=33.33.33.0"
  end

  # Define the virtual machines and network settings
  username = ENV["ansible"]
  (1..1).each do |i|
    config.vm.define "local_linux-0#{i}" do |node|
    node.vm.network "forwarded_port", guest: 8080, host: 8080
    node.vm.network "private_network", ip: "33.33.34.3#{i}"
    node.vm.hostname = "local-linux-0#{i}"
    end
  end

  # Set up SSH keys for Vagrant and root user
  ssh_pub_key = File.readlines("#{Dir.home}/.ssh/murilo.longarai@gmail.com.pub").first.strip
  config.vm.provision 'shell', inline: 'mkdir -p /root/.ssh'
  config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /root/.ssh/authorized_keys"
  config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys", privileged: false

  # Install additional packages and adjust SSH and sudoers settings
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get -y update  
    sudo apt-get -y install software-properties-common 
    sudo apt-get -y install python3 git
    sudo apt-get -y install podman
    sudo apt-get -y install net-tools
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    sudo apt-get -y install google-cloud-cli
    sudo sed -i 's/without-password/yes/g' /etc/ssh/sshd_config
    sudo sed -i /etc/sudoers -re 's/^root.*/root ALL=(ALL:ALL) NOPASSWD: ALL/g'
    echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
    sudo systemctl restart sshd
  SHELL
end
