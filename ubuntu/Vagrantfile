# -​*- mode: ruby -*​-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
 # The most common configuration options are documented and commented below.
 # For a complete reference, please see the online documentation at
 # https://docs.vagrantup.com.

 # Every Vagrant development environment requires a box. You can search for
 # boxes at https://atlas.hashicorp.com/search.
 
  config.vm.box = "ubuntu/xenial64"
  username = ENV["ansible"]

 # Create a private network, which allows host-only access to the machine
 # using a specific IP.
 (1..2).each do |i|
   config.vm.define "local_linux-0#{i}" do |node|
     node.vm.network "private_network", ip: "33.33.33.3#{i}"
     node.vm.hostname = "local-linux-#{username}-0#{i}"
   end
 end

 # Provider-specific configuration so you can fine-tune various
 # backing providers for Vagrant. These expose provider-specific options.
 # Example for VirtualBox:
 #
 config.vm.provider "virtualbox" do |vb|
   # Customize the amount of memory on the VM:
   vb.memory = "2048"
   vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
   vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
   vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
 end

 # Enable provisioning with a shell script. Additional provisioners such as
 # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
 # documentation for more information about their specific syntax and use.

 # Since we use this for testing purposes only, simply provision the pubkey from
 # the user's home directory too root / ubuntu users in the VM.
 ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
 config.vm.provision "shell", inline: <<-SHELL
   sudo sed -i 's/without-password/yes/g' /etc/ssh/sshd_config
   sudo service ssh restart
   echo #{ssh_pub_key} >> /home/ubuntu/.ssh/authorized_keys
   echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
 SHELL
end
